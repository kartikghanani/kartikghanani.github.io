"0",""
"0","# Fit Linear Regression model and generate predictions"
"0","linear_model <- lm(Total.Deaths ~ Total.Affected + Total.Damage...000.US.., data = data_clean)"
"0","data_clean$Predicted_Deaths <- predict(linear_model, newdata = data_clean)"
"0",""
"0","# Example: Predicting deaths at 80% of actual for demonstration"
"0","data_clean$Predicted_Deaths <- data_clean$Total.Deaths * 0.8"
"0",""
"0","# Filter the data for clarity within the desired limits"
"0","filtered_data <- data_clean[data_clean$Total.Deaths <= 3000 & data_clean$Predicted_Deaths <= 2000, ]"
"0",""
"0","# Create the plot with hover details"
"0","plot1 <- ggplot(filtered_data, aes("
"0","  x = Total.Deaths, "
"0","  y = Predicted_Deaths, "
"0","  color = Disaster.Type,"
"0","  text = paste("
"0","    ""Region:"", Region,"
"0","    ""<br>Disaster Type:"", Disaster.Type,"
"0","    ""<br>Total Deaths:"", Total.Deaths,"
"0","    ""<br>Predicted Deaths:"", round(Predicted_Deaths, 2)"
"0","  )"
"0",")) +"
"0","  geom_point(alpha = 0.7) +"
"0","  geom_abline(intercept = 0, slope = 1, color = ""red"", linetype = ""dashed"") +"
"0","  scale_x_continuous(limits = c(0, 3000)) +"
"0","  scale_y_continuous(limits = c(0, 2000)) +"
"0","  theme_minimal() +"
"0","  labs("
"0","    title = ""Actual vs Predicted Total Deaths by Disaster Type"","
"0","    x = ""Actual Total Deaths"","
"0","    y = ""Predicted Total Deaths"","
"0","    color = ""Disaster Type"""
"0","  )"
"0",""
"0","# Convert to interactive plot"
"0","ggplotly(plot1, tooltip = ""text"")"
