"0",""
"0","# Load necessary libraries"
"0","library(ggplot2)"
"0","library(plotly)"
"0","library(dplyr)"
"0","library(tidyr) # For pivot_longer()"
"2","Warning: package ‘tidyr’ was built under R version 4.4.2"
"2","
Attaching package: ‘tidyr’

"
"2","The following object is masked from ‘package:reshape2’:

    smiths

"
"0","library(caret)"
"2","Warning: package ‘caret’ was built under R version 4.4.2"
"2","Loading required package: lattice
"
"0","# Filter relevant columns"
"0","data_clean <- data_clean %>%"
"0","  filter(!is.na(Total.Damage...000.US..)) %>%"
"0","  mutate(Disaster.Type = as.factor(Disaster.Type))"
"0",""
"0","# Split data into training and testing sets"
"0","set.seed(123)"
"0","train_index <- createDataPartition(data_clean$Total.Damage...000.US.., p = 0.8, list = FALSE)"
"0","train_data <- data_clean[train_index, ]"
"0","test_data <- data_clean[-train_index, ]"
"0",""
"0","# Add predictions and confidence intervals to the test dataset"
"0","predictions <- as.data.frame(predict(linear_model, newdata = test_data, interval = ""confidence""))"
"0","colnames(predictions) <- c(""Predicted_Fit"", ""Predicted_Lower"", ""Predicted_Upper"")  # Explicitly rename columns"
"0","test_data <- cbind(test_data, predictions)"
"0",""
"0","# Aggregate by Disaster Type"
"0","predicted_damage_summary <- test_data %>%"
"0","  group_by(Disaster.Type) %>%"
"0","  summarise("
"0","    Mean_Predicted_Damage = mean(Predicted_Fit, na.rm = TRUE),"
"0","    Lower_Confidence = mean(Predicted_Lower, na.rm = TRUE),"
"0","    Upper_Confidence = mean(Predicted_Upper, na.rm = TRUE)"
"0","  )"
"0",""
"0","# Create the ggplot"
"0","confidence_plot <- ggplot(predicted_damage_summary, aes(x = Disaster.Type, y = Mean_Predicted_Damage, fill = Disaster.Type)) +"
"0","  geom_bar(stat = ""identity"", alpha = 0.7) +"
"0","  geom_errorbar(aes(ymin = Lower_Confidence, ymax = Upper_Confidence), width = 0.2, color = ""black"") +"
"0","  theme_minimal() +"
"0","  labs("
"0","    title = ""Predicted Mean Total Damage by Disaster Type with Confidence Intervals"","
"0","    x = ""Disaster Type"","
"0","    y = ""Predicted Mean Total Damage ('US$)"","
"0","    fill = ""Disaster Type"""
"0","  ) +"
"0","  theme("
"0","    axis.text.x = element_text(angle = 45, hjust = 1),"
"0","    legend.position = ""none"""
"0","  )"
"0",""
"0","# Convert the ggplot to an interactive plotly object"
"0","interactive_confidence_plot <- ggplotly(confidence_plot, tooltip = c(""y"", ""fill"")) %>%"
"0","  layout("
"0","    title = list("
"0","      text = ""Predicted Mean Total Damage by Disaster Type with Confidence Intervals"","
"0","      font = list(size = 18)"
"0","    ),"
"0","    xaxis = list("
"0","      title = ""Disaster Type"","
"0","      tickangle = 45"
"0","    ),"
"0","    yaxis = list("
"0","      title = ""Predicted Mean Total Damage (US$)"""
"0","    )"
"0","  )"
"0",""
"0","# Display the interactive plot"
"0","interactive_confidence_plot"
